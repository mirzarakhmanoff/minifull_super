{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/mirzorakhmanoff/Desktop/minifull_super/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nconst user = {\n  id: \"1\",\n  name: \"AAA\",\n  email: \"admin@gmail.com\",\n  password: \"12345\",\n};\nexport const authOptions = {\n  providers: [\n    CredentialsProvider({\n      // The name to display on the sign in form (e.g. \"Sign in with...\")\n      name: \"Credentials\",\n      // `credentials` is used to generate a form on the sign in page.\n      // You can specify which fields should be submitted, by adding keys to the `credentials` object.\n      // e.g. domain, username, password, 2FA token, etc.\n      // You can pass any HTML attribute to the <input> tag through the object.\n      credentials: {\n        email: {\n          label: \"email\",\n          type: \"email\",\n          placeholder: \"jsmith@example.com\",\n        },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials, req) {\n        console.log(credentials);\n        // Add logic here to look up the user from the credentials supplied\n\n        if (\n          credentials.email == user.email &&\n          credentials.password == user.password\n        )\n          return user;\n        else return null;\n      },\n    }),\n  ],\n  callbacks: {\n    async session({ session }) {\n      session.user = user;\n\n      return session;\n    },\n  },\n  debug: process.env.NODE_ENV === \"development\",\n  session: { strategy: \"jwt\" },\n  jwt: {\n    secret: process.env.NEXTAUTH_JWT_SECRET,\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n};\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AACA,MAAM,OAAO;IACX,IAAI;IACJ,MAAM;IACN,OAAO;IACP,UAAU;AACZ;AACO,MAAM,cAAc;IACzB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,mEAAmE;YACnE,MAAM;YACN,gEAAgE;YAChE,gGAAgG;YAChG,mDAAmD;YACnD,yEAAyE;YACzE,aAAa;gBACX,OAAO;oBACL,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;gBACA,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW,EAAE,GAAG;gBAC9B,QAAQ,GAAG,CAAC;gBACZ,mEAAmE;gBAEnE,IACE,YAAY,KAAK,IAAI,KAAK,KAAK,IAC/B,YAAY,QAAQ,IAAI,KAAK,QAAQ,EAErC,OAAO;qBACJ,OAAO;YACd;QACF;KACD;IACD,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE;YACvB,QAAQ,IAAI,GAAG;YAEf,OAAO;QACT;IACF;IACA,OAAO,oDAAyB;IAChC,SAAS;QAAE,UAAU;IAAM;IAC3B,KAAK;QACH,QAAQ,QAAQ,GAAG,CAAC,mBAAmB;IACzC;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}